services:
  # Redis para BullMQ queue
  redis:
    image: redis:7-alpine
    container_name: webhook-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - webhook-net

  # Aplicação principal
  webhook-mapper:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: webhook-mapper
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./schemas:/app/schemas
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_PATH=/app/data/database.sqlite
      - CORS_ORIGIN=*
      - RATE_LIMIT_MAX=1000
      - RATE_LIMIT_WINDOW=60000
      - TRUNCATE_MAX_LENGTH=100
      - TRUNCATE_FIELDS=base64,JPEGThumbnail,thumbnail,data,image
      - MAX_RAW_SAMPLES=10
      - MAX_EXAMPLES_PER_SCHEMA=20
      - QUEUE_CONCURRENCY=5
      - QUEUE_MAX_ATTEMPTS=3
      - QUEUE_BACKOFF_DELAY=2000
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - webhook-net

volumes:
  redis-data:
    driver: local

networks:
  webhook-net:
    driver: bridge
